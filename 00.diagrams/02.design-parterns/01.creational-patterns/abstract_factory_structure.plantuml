@startuml Abstract Factory Structure
skinparam ClassAttributeIconSize 0

interface AbstractFactory <<interface>> {
  + createProductA(): ProductA
  + createProductB(): ProductB
}

class ConcreteFactory1 implements AbstractFactory {
  + createProductA(): ProductA
  + createProductB(): ProductB
}

class ConcreteFactory2 implements AbstractFactory {
  + createProductA(): ProductA
  + createProductB(): ProductB
}

note right of ConcreteFactory2::createProductA
  return ConcreteProductA2()
end note

abstract class ProductA

class ConcreteProductA1 extends ProductA
class ConcreteProductA2 extends ProductA

abstract class ProductB

class ConcreteProductB1 extends ProductB
class ConcreteProductB2 extends ProductB

ConcreteFactory1 ..> ConcreteProductA1
ConcreteFactory1 ..> ConcreteProductB1

ConcreteFactory2 ..> ConcreteProductA2
ConcreteFactory2 ..> ConcreteProductB2

class Client {
  - factory: AbstractFactory
  + Client(f: AbstractFactory)
  + someOperation()
}

Client -> AbstractFactory
@enduml